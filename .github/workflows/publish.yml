name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (optional - will use version from pyproject.toml if not specified)'
        required: false
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Download NLTK data
      run: |
        python -c "import nltk; nltk.download('punkt'); nltk.download('wordnet'); nltk.download('averaged_perceptron_tagger')"
    
    - name: Run tests
      run: |
        pytest tests/ -v

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # For trusted publishing

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Show version info
      run: |
        echo "Trigger: ${{ github.event_name }}"
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "Manual trigger"
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "Requested version: ${{ github.event.inputs.version }}"
          fi
        else
          echo "Release trigger: ${{ github.event.release.tag_name }}"
        fi
        echo "Version in pyproject.toml:"
        python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check distribution
      run: twine check dist/*
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
